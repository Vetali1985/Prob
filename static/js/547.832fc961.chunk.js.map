{"version":3,"file":"static/js/547.832fc961.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/ErrorSearch/ErrorSearch.jsx","components/Movies/Movies.jsx","components/Movies/Movies.styled.js","service/fetchService.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Poster = styled.img`\nborder-radius: 5px;\n    list-style: none;\n    width: 340px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n`","import { Poster } from './MovieCard.styled';\n\nexport const MovieCard = ({ movieId, title, posterPath }) => {\n  const filmPosterSrc = `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  return (\n    <li>\n      <Poster\n        src={posterPath ? filmPosterSrc : 'No Poster'}\n        alt={title}\n        height=\"500\"\n      />\n    </li>\n  );\n};\n","export const ErrorSearch = ({ message }) => {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport {\n  List,\n  Container,\n  FormInput,\n  FormBtnLabel,\n  FormBtn,\n  Form,\n} from './Movies.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport { fetchQuery } from 'service/fetchService';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { ErrorSearch } from 'components/ErrorSearch/ErrorSearch';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  const onInputValue = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setStatus('pending');\n\n    fetchQuery(searchQuery)\n      .then(r => {\n        if (r.data.total_results === 0) setStatus('no-results');\n        setFilms(r.filmsArr);\n        setStatus('resolved');\n      })\n      .catch(e => console.log(e.message));\n  }, [searchQuery]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') return;\n    setSearchParams({ searchQuery: query });\n    setQuery('');\n  };\n  return (\n    <Container>\n      <Form onSubmit={formSubmit}>\n        <label>\n          <FormInput\n            value={query}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onInput={onInputValue}\n          />\n        </label>\n        <FormBtn type=\"submit\">\n          <FormBtnLabel>Search</FormBtnLabel>\n        </FormBtn>\n      </Form>\n      {status === 'resolved' && films.length > 0 && (\n        <List>\n          {films.map(film => {\n            const { id, poster_path, title, name } = film;\n            return (\n              <MovieCard\n                key={id}\n                posterPath={poster_path}\n                title={title ?? name}\n                movieId={id}\n              />\n            );\n          })}\n        </List>\n      )}\n      {status === 'no-results' && (\n        <ErrorSearch\n          message={`Sorry, we did not find any movies for \"${searchQuery}\"`}\n        />\n      )}\n    </Container>\n  );\n};\nexport default Movies;\n","import styled from 'styled-components';\n// import img from '../../images/search.svg';\n\nexport const Container = styled.div`\n  padding-top: 120px;\n  width: 1440px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  padding: 30px 0 60px;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 0;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid black;\n`;\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  \n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 550px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const FormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;","import axios from 'axios';\nexport async function fetchPopularFilms() {\n  const url =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=d6e97164aaa08d2091b81af2621a507c';\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchQuery(searchQuery) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return { filmsArr, data };\n}\n\nexport async function fetchDetails(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n\n  return data;\n}\n\nexport async function fetchReviews(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&page=1`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchCast(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmCast = await data.cast;\n  return filmCast;\n}\n"],"names":["Poster","styled","MovieCard","movieId","title","posterPath","filmPosterSrc","src","alt","height","ErrorSearch","message","useState","query","setQuery","films","setFilms","status","setStatus","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchQuery","then","r","data","total_results","filmsArr","catch","e","console","log","onSubmit","preventDefault","trim","value","type","autoComplete","autoFocus","placeholder","onInput","target","toLowerCase","length","map","film","id","poster_path","name","Container","List","Form","FormBtn","FormInput","FormBtnLabel","fetchPopularFilms","axios","resp","results","url","fetchDetails","fetchReviews","fetchCast","cast","filmCast"],"sourceRoot":""}