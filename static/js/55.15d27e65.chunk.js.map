{"version":3,"file":"static/js/55.15d27e65.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsCard.jsx","components/MovieDetails/MovieDetails.jsx","components/MovieDetails/MovieDetails.styled.js","components/Movies/Movies.styled.js","service/fetchService.jsx"],"sourcesContent":["import { Descr, Poster, Wrapper } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetailsCard = ({\n  poster_path,\n  original_title,\n  release_date,\n  vote_average,\n  overview,\n  genres,\n}) => {\n  const imgSrc = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  return (\n    <Wrapper>\n      <Poster>\n        <img\n          src={poster_path ? imgSrc : 'noFilm'}\n          alt={original_title}\n          width=\"360\"\n        />\n      </Poster>\n      <Descr>\n        <h2>\n          {original_title} ({release_date.slice(0, 4)})\n        </h2>\n        <p>User Score: {vote_average.toFixed(1) * 10}%</p>\n\n        <div>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n        <div>\n          <h3>Genres</h3>\n          <p>\n            {genres.map(g => {\n              return g.name + ' ';\n            })}\n          </p>\n        </div>\n      </Descr>\n    </Wrapper>\n  );\n};\n\nMovieDetailsCard.propTypes = {\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React, { Suspense, useState } from 'react';\nimport { useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { LinkBtn, Wrapper } from './MovieDetails.styled';\nimport { MovieDetailsCard } from './MovieDetailsCard';\n\nimport { Container } from 'components/Movies/Movies.styled';\nimport { fetchDetails } from 'service/fetchService';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchDetails(movieId)\n      .then(\n        ({\n          id,\n          poster_path,\n          original_title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        }) => {\n          setFilm({\n            id,\n            poster_path,\n            original_title,\n            release_date,\n            vote_average,\n            overview,\n            genres,\n          });\n        }\n      )\n      .catch(e => console.log(e.message));\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = film;\n  return (\n    <Container>\n      <Wrapper>\n        <LinkBtn to={location.state?.from ?? '/'}>Go back</LinkBtn>\n      </Wrapper>\n\n      {film.id && (\n        <MovieDetailsCard\n          poster_path={poster_path}\n          original_title={original_title ?? 'none'}\n          release_date={release_date}\n          vote_average={vote_average ?? 0}\n          overview={overview ?? 'none'}\n          genres={genres ?? [{ id: 1, name: 'none' }]}\n        />\n      )}\n      <Wrapper>\n        <LinkBtn to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n          Cast\n        </LinkBtn>\n        <LinkBtn to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>\n          Reviews\n        </LinkBtn>\n      </Wrapper>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\nexport default MovieDetails;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 1440px;\n  margin: 0 auto 30px;\n  display: flex;\n`;\n\nexport const Poster = styled.div`\n  margin-right: 50px;\n`;\n\nexport const Descr = styled.div`\n  font-size: 18px;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  box-sizing: border-box;\n  width: 150px;\n  height: 50px;\n  margin-right: 20px;\n  font-size: 20px;\n  padding: 10px 30px;\n  text-align: center;\n  background-color: #fff;\n  font-weight: 500;\n  line-height: 30px;\n  border: 1px solid black;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n// import img from '../../images/search.svg';\n\nexport const Container = styled.div`\n  padding-top: 120px;\n  width: 1440px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  padding: 30px 0 60px;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 0;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid black;\n`;\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  \n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 550px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const FormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;","import axios from 'axios';\nexport async function fetchPopularFilms() {\n  const url =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=d6e97164aaa08d2091b81af2621a507c';\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchQuery(searchQuery) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return { filmsArr, data };\n}\n\nexport async function fetchDetails(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n\n  return data;\n}\n\nexport async function fetchReviews(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US&page=1`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchCast(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d6e97164aaa08d2091b81af2621a507c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmCast = await data.cast;\n  return filmCast;\n}\n"],"names":["MovieDetailsCard","poster_path","original_title","release_date","vote_average","overview","genres","imgSrc","src","alt","width","slice","toFixed","map","g","name","useState","film","setFilm","movieId","useParams","location","useLocation","useEffect","fetchDetails","then","id","catch","e","console","log","message","to","state","from","Suspense","fallback","Wrapper","styled","Poster","Descr","LinkBtn","NavLink","Container","List","Form","FormBtn","FormInput","FormBtnLabel","fetchPopularFilms","axios","resp","data","results","filmsArr","fetchQuery","searchQuery","url","fetchReviews","fetchCast","cast","filmCast"],"sourceRoot":""}